#if 0
//
// Generated by Microsoft (R) D3DX9 Shader Compiler 
//
//   fxc /T ps_2_0 /E MyPixelShader /Fh simple_ps.h simple.fx
//
    ps_2_0
    def c0, 5, 0.5, 0, 1
    def c1, -0.5, 0.25, 0, 0
    def c2, 0.25, 0.25, 1, 0
    def c3, 1.5, 1.5, 0, 0
    def c4, 0.5, 1, 1, 0
    def c5, 1, 0.5, 1, 0
    dcl t0.xyz
    mul r0.xy, t0, c0.x
    abs r0.xy, r0
    frc r0.xy, r0
    cmp r0.xy, t0, r0, -r0
    add r0.w, -r0.x, c0.y
    cmp r0.w, r0.w, c0.z, c0.w
    add r1.w, -r0.x, c1.x
    cmp r1.w, r1.w, c0.z, c0.w
    cmp r2.w, r0.x, c0.z, c0.w
    mad r0.w, r2.w, r1.w, r0.w
    cmp r0.w, -r0.w, c0.z, c0.w
    add r1.w, -r0.y, c0.y
    cmp r1.w, r1.w, c0.z, c0.w
    add r2.w, -r0.y, c1.x
    cmp r3.w, r0.y, c0.z, c0.w
    cmp r2.w, r2.w, c0.z, c0.w
    mad r1.w, r3.w, r2.w, r1.w
    cmp r1.w, -r1.w, c0.z, c0.w
    add r0.w, r0.w, r1.w
    mul r0.w, r0.w, c0.y
    frc r0.w, r0.w
    mov r0.xyz, c3
    mad r0.xyz, r0.w, r0, c2
    add r0.w, t0.z, t0.z
    max r1.w, r0.w, c0.z
    max r2.w, -r0.w, c0.z
    min r0.w, r1.w, c1.y
    lrp r1.xyz, r0.w, c4, r0
    min r0.w, r2.w, c1.y
    lrp r2.xyz, r0.w, c5, r1
    mov r0.xy, r2.x
    mov r0.w, r2.z
    mov r0.z, r2.y
    mov oC0, r0

// approximately 34 instruction slots used
#endif

const DWORD g_ps20_MyPixelShader[] =
{
    0xffff0200, 0x0013fffe, 0x42415443, 0x0000001c, 0x00000023, 0xffff0200, 
    0x00000000, 0x00000000, 0x20000100, 0x0000001c, 0x325f7370, 0x4d00305f, 
    0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 
    0x6f432072, 0x6c69706d, 0x00207265, 0x05000051, 0xa00f0000, 0x40a00000, 
    0x3f000000, 0x00000000, 0x3f800000, 0x05000051, 0xa00f0001, 0xbf000000, 
    0x3e800000, 0x00000000, 0x00000000, 0x05000051, 0xa00f0002, 0x3e800000, 
    0x3e800000, 0x3f800000, 0x00000000, 0x05000051, 0xa00f0003, 0x3fc00000, 
    0x3fc00000, 0x00000000, 0x00000000, 0x05000051, 0xa00f0004, 0x3f000000, 
    0x3f800000, 0x3f800000, 0x00000000, 0x05000051, 0xa00f0005, 0x3f800000, 
    0x3f000000, 0x3f800000, 0x00000000, 0x0200001f, 0x80000000, 0xb0070000, 
    0x03000005, 0x80030000, 0xb0e40000, 0xa0000000, 0x02000023, 0x80030000, 
    0x80e40000, 0x02000013, 0x80030000, 0x80e40000, 0x04000058, 0x80030000, 
    0xb0e40000, 0x80e40000, 0x81e40000, 0x03000002, 0x80080000, 0x81000000, 
    0xa0550000, 0x04000058, 0x80080000, 0x80ff0000, 0xa0aa0000, 0xa0ff0000, 
    0x03000002, 0x80080001, 0x81000000, 0xa0000001, 0x04000058, 0x80080001, 
    0x80ff0001, 0xa0aa0000, 0xa0ff0000, 0x04000058, 0x80080002, 0x80000000, 
    0xa0aa0000, 0xa0ff0000, 0x04000004, 0x80080000, 0x80ff0002, 0x80ff0001, 
    0x80ff0000, 0x04000058, 0x80080000, 0x81ff0000, 0xa0aa0000, 0xa0ff0000, 
    0x03000002, 0x80080001, 0x81550000, 0xa0550000, 0x04000058, 0x80080001, 
    0x80ff0001, 0xa0aa0000, 0xa0ff0000, 0x03000002, 0x80080002, 0x81550000, 
    0xa0000001, 0x04000058, 0x80080003, 0x80550000, 0xa0aa0000, 0xa0ff0000, 
    0x04000058, 0x80080002, 0x80ff0002, 0xa0aa0000, 0xa0ff0000, 0x04000004, 
    0x80080001, 0x80ff0003, 0x80ff0002, 0x80ff0001, 0x04000058, 0x80080001, 
    0x81ff0001, 0xa0aa0000, 0xa0ff0000, 0x03000002, 0x80080000, 0x80ff0000, 
    0x80ff0001, 0x03000005, 0x80080000, 0x80ff0000, 0xa0550000, 0x02000013, 
    0x80080000, 0x80ff0000, 0x02000001, 0x80070000, 0xa0e40003, 0x04000004, 
    0x80070000, 0x80ff0000, 0x80e40000, 0xa0e40002, 0x03000002, 0x80080000, 
    0xb0aa0000, 0xb0aa0000, 0x0300000b, 0x80080001, 0x80ff0000, 0xa0aa0000, 
    0x0300000b, 0x80080002, 0x81ff0000, 0xa0aa0000, 0x0300000a, 0x80080000, 
    0x80ff0001, 0xa0550001, 0x04000012, 0x80070001, 0x80ff0000, 0xa0e40004, 
    0x80e40000, 0x0300000a, 0x80080000, 0x80ff0002, 0xa0550001, 0x04000012, 
    0x80070002, 0x80ff0000, 0xa0e40005, 0x80e40001, 0x02000001, 0x80030000, 
    0x80000002, 0x02000001, 0x80080000, 0x80aa0002, 0x02000001, 0x80040000, 
    0x80550002, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
